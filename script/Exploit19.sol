// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "../Instances/MagicNumber.sol";
import "forge-std/console.sol";
import "forge-std/Script.sol";

contract Exploit is Script {
    MagicNum public target = MagicNum(0x6aC3D7aeF1F567165923b1c66AB0526324873Ef0);

    function run() external {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        bytes memory code = "\x60\x0a\x60\x0c\x60\x00\x39\x60\x0a\x60\x00\xf3\x60\x2a\x60\x80\x52\x60\x20\x60\x80\xf3";
        address solver;

        assembly {
            solver := create(0, add(code, 0x20), mload(code))
        }
        target.setSolver(solver);
        vm.stopBroadcast();
    }
}